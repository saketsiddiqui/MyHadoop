***********************************************
	Cloudera production deployment
***********************************************


-----*** Create a VPC ***-----

## Create a elastic ip

## Create VPC with a public and a private subnet

## Create two security groups 

-> In default security group

All traffic     your-ip/32
All traffic     private-subnet-cidr/24


-> in second security group (allowing communication only from edge)

All traffic     default-sec-group-id
All traffic     private-subnet-cidr/24



-----*** Launch the edge node ***-----

-> select default security group 

-----*** Update the server ***-----
$ sudo apt-get update && sudo apt-get dist-upgrade -y

-----*** Disable transparent huge pages ***-----
$ sudo nano /etc/rc.local
## Add these lines:

if test -f /sys/kernel/mm/transparent_hugepage/enabled; then
    echo never > /sys/kernel/mm/transparent_hugepage/enabled
fi

if test -f /sys/kernel/mm/transparent_hugepage/defrag; then
    echo never > /sys/kernel/mm/transparent_hugepage/defrag
fi

$sudo -i

$source /etc/rc.local 

-----*** Install NTP ***-----

$ sudo apt-get install ntp -y 
$ sudo service ntp status
## If it isn't running 
$ sudo service ntp start 


-----*** Set Swappiness ***-----

sudo sysctl -a | grep vm.swappiness
sudo sysctl vm.swappiness=1


-----*** Setting root reserved space ***-----

$ sudo lsblk
$ sudo tune2fs -l /dev/xvda1
$ sudo tune2fs -l /dev/xvda1 | egrep "Block count|Reserved block count" 
$ sudo tune2fs -m 1 /dev/xvda1
$ sudo tune2fs -l /dev/xvda1 | egrep "Block count|Reserved block count" 


### Note : Now, save the instance to an image, call it “Cloudera Manager” Make sure to 
check “No reboot”


-----*** Launch cluster nodes ***----

Launch reamining instances in private subnet

Select second security group for these instances



##### Preparing external database for cloudera #####

-----*** Install MySQL ***-----

sudo apt-get install mysql-server -y

-----*** Stop mysql ***-----

sudo service mysql stop 

sudo service mysql status

-----*** Move innodb log file ***-----

mkdir mysqlbup

sudo su

cd /var/lib/mysql

 mv ib_logfile0 /home/ubuntu/mysqlbup/

 mv ib_logfile1 /home/ubuntu/mysqlbup/

exit

-----*** Edit the option file my.cnf to cloudera recommended settings ***-----

sudo su

cd /etc/mysql

nano my.cnf

==============================================================================

[mysqld]
transaction-isolation = READ-COMMITTED
# Disabling symbolic-links is recommended to prevent assorted security risks;
# to do so, uncomment this line:
# symbolic-links = 0

key_buffer_size = 32M
max_allowed_packet = 32M
thread_stack = 256K
thread_cache_size = 64
query_cache_limit = 8M
query_cache_size = 64M
query_cache_type = 1

max_connections = 550
#expire_logs_days = 10
#max_binlog_size = 100M

#log_bin should be on a disk with enough free space. Replace '/var/lib/mysql/mysql_binary_log' with an appropriate path for your system
#and chown the specified folder to the mysql user.
log_bin=/var/lib/mysql/mysql_binary_log

# For MySQL version 5.1.8 or later. For older versions, reference MySQL documentation for configuration help.
binlog_format = mixed

read_buffer_size = 2M
read_rnd_buffer_size = 16M
sort_buffer_size = 8M
join_buffer_size = 8M

# InnoDB settings
innodb_file_per_table = 1
innodb_flush_log_at_trx_commit  = 2
innodb_log_buffer_size = 64M
innodb_buffer_pool_size = 4G
innodb_thread_concurrency = 8
innodb_flush_method = O_DIRECT
innodb_log_file_size = 512M

[mysqld_safe]
log-error=/var/log/mysqld.log
pid-file=/var/run/mysqld/mysqld.pid

sql_mode=STRICT_ALL_TABLES

==========================================================================

-----*** Make mysql start on boot ***----

sudo update-rc.d mysql defaults

-----*** Start mysql ***-----

sudo service mysql start 

-----*** Mysql secure install ***----

$ sudo /usr/bin/mysql_secure_installation
[...]
Enter current password for root (enter for none):
OK, successfully used password, moving on...
[...]
Set root password? [Y/n] y
New password:
Re-enter new password:
Remove anonymous users? [Y/n] Y
[...]
Disallow root login remotely? [Y/n] N
[...]
Remove test database and access to it [Y/n] Y
[...]
Reload privilege tables now? [Y/n] Y
All done!

-----*** Install mysql JDBC driver ***-----

sudo apt-get install libmysql-java


#### Establish Your Cloudera Manager Repository #####


curl https://archive.cloudera.com/cm5/ubuntu/trusty/amd64/cm/cloudera.list > cloudera-manager.list

(Link for cloudera manager repo url : https://www.cloudera.com/documentation/enterprise/release-notes/topics/cm_vd.html )

nano cloudera-manager.list
(change >>  deb https://archive.cloudera.com/cm5/ubuntu/lucid/amd64/cm trusty-cm5 contrib to deb https://archive.cloudera.com/cm5/ubuntu/lucid/amd64/cm trusty-cm5.9.3 contrib)

sudo mv cloudera-manager.list /etc/apt/sources.list.d/

sudo apt-get update

(if you see : GPG error .... NO_PUBKEY then
sudo apt-key adv --recv-key --keyserver keyserver.ubuntu.com 327574EE02A818DD)

sudo apt-get update 


##### Install Cloudera Manager server software #####


-----*** Install Oracle JDK ***-----

sudo apt-get install oracle-j2sdk1.7 -y

-----*** Install the Cloudera Manager Server Packages ***-----

sudo apt-get install cloudera-manager-daemons cloudera-manager-server


##### Setting up the Cloudera Manager Server Database #####

mysql -u root -p

mysql>CREATE DATABASE cmdb;
mysql> CREATE USER 'cm'@'localhost' IDENTIFIED BY 'password';
mysql> GRANT ALL PRIVILEGES ON *.* TO 'cm'@'localhost' IDENTIFIED BY 'password' WITH GRANT OPTION;
mysql> exit;

sudo /usr/share/cmf/schema/scm_prepare_database.sh -p mysql cmdb cm password


##### Start the Cloudera Manager Server #####

sudo service cloudera-scm-server start

##### Setup custom CDH repository #####

cd /opt/cloudera/parcel-repo/

sudo wget http://archive.cloudera.com/cdh5/parcels/5.9/CDH-5.9.3-1.cdh5.9.3.p0.4-trusty.parcel

sudo wget http://archive.cloudera.com/cdh5/parcels/5.9/CDH-5.9.3-1.cdh5.9.3.p0.4-trusty.parcel.sha1
 
sudo mv CDH-5.9.3-1.cdh5.9.3.p0.4-trusty.parcel.sha1 CDH-5.9.3-1.cdh5.9.3.p0.4-trusty.parcel.sha

sudo wget http://archive.cloudera.com/cdh5/parcels/5.9/manifest.json

ll

sudo chown cloudera-scm:cloudera-scm CDH-5.9.3-1.cdh5.9.3.p0.4-trusty.parcel

sudo chown cloudera-scm:cloudera-scm CDH-5.9.3-1.cdh5.9.3.p0.4-trusty.parcel.sha

sudo chown cloudera-scm:cloudera-scm manifest.json

(Address for CDH parcels : http://archive.cloudera.com/cdh5/parcels/)


-----*** Restart Cloudera manager server ***-----

sudo service cloudera-scm-server restart

## Login to CM web UI on 7180

After assigning service roles to hosts, when you are on database setup page, do following

##### Create database for CDH services #####

## For hue we will create db on CM host, for others we will create on CMS host


## On CMS host

## Install MySql and configure as above

mysql -u root -p

>> For reports manager

mysql> create database rman DEFAULT CHARACTER SET utf8;
mysql> CREATE USER 'rman'@'<pri-dns>' IDENTIFIED BY 'password';
(Note : Enter pri-dns of host where the particular service is running)
mysql> grant all on rman.* TO 'rman'@'<pri-dns>' IDENTIFIED BY 'password';


>> For Hive

mysql> create database metastore DEFAULT CHARACTER SET utf8;
mysql> CREATE USER 'hive'@'<pri-dns>' IDENTIFIED BY 'password';
mysql> grant all on metastore.* TO 'hive'@'<pri-dns>' IDENTIFIED BY 'password';


>> For Oozie

mysql> create database oozie default character set utf8;
mysql> CREATE USER 'oozie'@'<pri-dns>' IDENTIFIED BY 'password';
mysql> grant all privileges on oozie.* to 'oozie'@'<pri-dns>' identified by 'password';

== Add mysql driver jar

sudo cp /usr/share/java/mysql-connector-java-5.1.28.jar /opt/cloudera/parcels/CDH/lib/oozie/lib/


>> For Hue

sudo su

cd /etc/mysql
	
nano my.cnf

[mysqld]
...
bind-address=0.0.0.0
sql_mode=STRICT_ALL_TABLES

sudo service mysql restart

mysql -u root -p

mysql> create database hue default character set utf8 default collate utf8_general_ci;
mysql> CREATE USER 'hue'@'<pri-dns>' IDENTIFIED BY 'password';
mysql> grant all on hue.* to 'hue'@'<pri-dns>' identified by 'password';


##### Install Mysql jdbc jar on hosts where services are running #####

sudo apt-get install libmysql-java

sudo cp /usr/share/java/mysql-connector-java-5.1.28.jar /opt/cloudera/parcels/CDH/lib/oozie/lib/


##### On CMS database host

sudo su

cd /etc/mysql

nano my.cnf

bind-address=(private-ip-of-cms)


## Now continue installation on CM web ui


-----*** Set up Edge node ***-----


Add gateway roles on CM node

test whether read and write is working

## Run a test job

yarn jar /opt/cloudera/parcels/CDH/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar pi 10 100 

## Set up Jumper node to access webui of daemons

